#include <stdarg.h>
#include <unistd.h>

void print_integer(int n);

int _printf(const char *format, ...)
{
    va_list args;
    int count = 0;
    char *str;
    char c;

    va_start(args, format);

    while (*format)
    {
        if (*format == '%')
        {
            format++;
            switch (*format)
            {
                case 'c':
                    c = (char) va_arg(args, int);
                    write(1, &c, 1);
                    count++;
                    break;
                case 's':
                    str = va_arg(args, char *);
                    while(*str)
                    {
                        write(1, str, 1);
                        str++;
                        count++;
                    }
                    break;
                case 'd':
                case 'i':
                    print_integer(va_arg(args, int));
                    count += 2;  // This is a placeholder. In reality, you would need a way to calculate the number of digits in the integer.
                    break;
                case '%':
                    write(1, format, 1);
                    count++;
                    break;
                default:
                    break;
            }
        }
        else
        {
            write(1, format, 1);
            count++;
        }
        format++;
    }

    va_end(args);
    return count;
}

void print_integer(int n)
{
    char c;
    if (n < 0) {
        n = -n;
        write(1, "-", 1);
    }
    if (n == 0)
        write(1, "0", 1);
    else if (n / 10)
        print_integer(n / 10);
    c = (n % 10) + '0';
    write(1, &c, 1);
}
